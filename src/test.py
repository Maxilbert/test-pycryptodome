def enc_one(r):
    c_1 = pow(g, r, p)
    c_2 = pow(h, r, p)
    c_2 = c_2 * g % p
    return c_1, c_2


def enc_zero(r):
    c_1 = pow(g, r, p)
    c_2 = pow(h, r, p)
    return c_1, c_2


def enc(m, r):
    c_1 = pow(g, r, p)
    c_2 = pow(h, r, p) * pow(g, m, p) % p
    return c_1, c_2

def is_zero(c_1, c_2, k):
    return pow(c_1, k, p) == c_2


def is_one(c_1, c_2, k):
    return pow(c_1, k, p) * g % p == c_2


def count_bitlen(x):
    x_str = str(hex(x)).replace('0x', '')
    charlen = len(x_str)
    bitlen = charlen * 4
    if x_str[0] in ['1']:
        bitlen -= 3
    elif x_str[0] in ['2', '3']:
        bitlen -= 2
    elif x_str[0] in ['4', '5', '6', '7']:
        bitlen -= 1
    return bitlen


# 2048-bit
# p = 26584000737522469559255213278148540663947724825324296157281193261181560548636153467049388117146637651050841116751829414426641729125865212852845272219535094895612767586157054679717516525078771286758024931146883711257859724041313912413596611159824145205086037835560328376774374104238393705363248976976377110731807492414212611208135283317517981781090664549781709233590364297738977588232087692712917778615106562503850327667273702335065226779043136671032271076865811019258766329390243420432732327797472036475476983110047934083167758034940936965920779849084494935094949379247995973815460068664200438737256045065229041041507
# g = 7712753408539015955587720622866045086100737658337481818803197599971960501551987960329763761966211483394244124943769578134099531030721251638507169219664821394172654696079268857083072356298616293179600852690187523019225771640714262512850756102223895196207247716673151328947794893953663960508036604786330066702321170187240277571209647492040711829857030771488303715009803563714075588433395953781898664383110749056516840016010503246460028780087232571788079441040275400988084148082885247998601185855568509980811261405430579194522685045026121103372967942129139884107517415500506739791799824339395723091081118884213831565581
# h = 5637170314921417636010417575850891075753188060631833493864800028039945355092827317649381423494228541515936258540019868977950160862142350278810564003228892079555640011819030286152164610309460004936758700184186351189241034263923819363296343391043512154862860478019434309637795574864603785744726921696160250936954421893882166937000899000449396261691800422206160299458613048121324724939040261327177778596717783948672555160766693895541724865552644773344544298752688413410666068446910306516491817258302593679412526509802327405245701172669258511446204096681892568908383894091201066717801257824068202797509637051812760599839
# k = 1186710438771181738086475897254415151771586865018870997729725587071777650920882325727906195757766584069132790928307319305268482472003099329705759734574550256271615672454149633453789541522434412499460304842062847682854957532294914058316098437375838771737367946841089209725605055424634541631779440688286324149632177801817055306123679218955895525490245704825939830552776528232548351511043942650533035533071614907448593847650515228755800849939187968141870142492094837774178396336438977250414854612996459789318865513722441410915574327326986724796542515447460846847785213094463443305339432843168876206902701181495289169596

# 1024-bit
p = 153098272504387072266936256155440771844922582242861823323292219309209807318109992190455717597749270325963123403359939192028947724926144342818770586136136126337375436706876614423863264051678326206739626203872223116203206738831155125839612432933059096643057013804321361170650382385182136069811475540151279147259
g = 48095861804730928538428071688224004229592704416264787635743716356958582448226167154685924895443220005707859651277553435409220536317215422963672871914841517783042349761227906722244783116777179995820326154186287286353935949308174273056377987690394866714089833749644657555907806410435558837920979345110898160449
k = 10022446701738583271276071804010446073913280425189472942303437612418862851223244723245226017322005926246813100742541609377103046893136104044015161562561526985453585647020566093167977121428923628169372925889701872928538625011078052920813557913682354018653924330859466163743103828247525446549945542160664745508

h = pow(g, k, p)

r = 62555713279948745690349351610356531327032351353192320967421937635293378693946211592624820108119998277825391232074589514501649650827908709815124457628347900961038658650480217718807650468597580969342931489490635246791126151937259525476850522897096329798193623331012272552762850181502944812071200771862243846107

print('p: ', hex(p))
print('p_bitlen: ', count_bitlen(p))
print('g: ', hex(g))
print('g_bitlen: ', count_bitlen(g))
print('k: ', hex(k))
print('k_bitlen: ', count_bitlen(k))
print('h: ', hex(h))
print('h_bitlen: ', count_bitlen(h))


c_1, c_2 = enc_zero(r)
print('c_1: ', hex(c_1))
print('c_1_bitlen: ', count_bitlen(c_1))
print('c_2: ', hex(c_2))
print('c_2_bitlen: ', count_bitlen(c_2))
print(is_zero(c_1, c_2, k))
print(is_one(c_1, c_2, k))


c_1, c_2 = enc_one(r)
print('c_1: ', hex(c_1))
print('c_1_bitlen: ', count_bitlen(c_1))
print('c_2: ', hex(c_2))
print('c_2_bitlen: ', count_bitlen(c_2))
print(is_zero(c_1, c_2, k))
print(is_one(c_1, c_2, k))


c_1, c_2 = enc(3, r)
print('c_1: ', hex(c_1))
print('c_1_bitlen: ', count_bitlen(c_1))
print('c_2: ', hex(c_2))
print('c_2_bitlen: ', count_bitlen(c_2))
print(is_zero(c_1, c_2, k))
print(is_one(c_1, c_2, k))



